on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: Rust

jobs:
  build:
    name: Build, lint, test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # We always build with latest stable, but we also reset
      # the CI cache when new versions of Rust are released.
      - name: Determine build cache key
        id: vars
        run: |
          RUST_VERSION=$(rustc -V | grep -Po '(?<=^rustc )\S+')
          echo "rustc-version=$RUST_VERSION" >> $GITHUB_OUTPUT

      # 1. Use `**/Cargo.toml` in cache key because Cargo.lock isn't committed.
      # 2. Don't include target/ -- only cache building 3rd-party libraries.
      - name: Use build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.vars.outputs.rustc-version }}-${{ hashFiles('**/Cargo.toml') }}

      - name: Build constraints
        run: cargo run --bin constraint-evaluation-generator

      - name: Run fmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run tests
        run: cargo test

      - name: Build benchmarks
        run: cargo bench --all-targets --no-run
